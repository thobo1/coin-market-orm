"""Create table

Revision ID: 3d5f37700e0a
Revises: 
Create Date: 2025-06-28 17:06:10.103733

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3d5f37700e0a'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('global_settings',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('last_annonce_index_on_chain', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.CheckConstraint('id = 1', name='single_row_check'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('is_onboarding', sa.Boolean(), nullable=True),
    sa.Column('solana_address', sa.String(length=255), nullable=False),
    sa.Column('email_verified', sa.Boolean(), nullable=True),
    sa.Column('email_otp', sa.String(length=6), nullable=True),
    sa.Column('email_otp_created_at', sa.DateTime(), nullable=True),
    sa.Column('is_banned', sa.Boolean(), nullable=False),
    sa.Column('ban_expires_at', sa.DateTime(), nullable=True),
    sa.Column('ban_reason', sa.Text(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('solana_address')
    )
    op.create_table('addresses',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('recipient', sa.String(length=255), nullable=False),
    sa.Column('address', sa.String(length=255), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=False),
    sa.Column('postal_code', sa.String(length=20), nullable=False),
    sa.Column('country', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_default', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('uq_user_default_address', 'addresses', ['user_id'], unique=True, postgresql_where=sa.text('is_default = true'))
    op.create_table('annonces',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('category', sa.String(length=100), nullable=False),
    sa.Column('publication_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('hash_url', sa.String(length=255), nullable=False),
    sa.Column('photos', sa.Text(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address', sa.JSON(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('pubkey', sa.String(length=44), nullable=True),
    sa.Column('shipment_confirmation', sa.JSON(), nullable=True),
    sa.Column('dispute', sa.JSON(), nullable=True),
    sa.Column('shipping_regions', sa.JSON(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('hash_url'),
    sa.UniqueConstraint('pubkey')
    )
    op.create_table('notes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=True),
    sa.Column('annonce_id', sa.Integer(), nullable=False),
    sa.Column('seller_id', sa.Integer(), nullable=False),
    sa.Column('reviewer_id', sa.Integer(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.CheckConstraint('rating >= 1 AND rating <= 5', name='rating_check'),
    sa.ForeignKeyConstraint(['annonce_id'], ['annonces.id'], ),
    sa.ForeignKeyConstraint(['reviewer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('annonce_id')
    )
    op.create_table('price_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('annonce_id', sa.Integer(), nullable=True),
    sa.Column('buyer_id', sa.Integer(), nullable=True),
    sa.Column('seller_id', sa.Integer(), nullable=True),
    sa.Column('last_offer_by', sa.String(), nullable=True),
    sa.Column('offer_price', sa.Float(), nullable=True),
    sa.Column('signature', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=False),
    sa.ForeignKeyConstraint(['annonce_id'], ['annonces.id'], ),
    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_price_requests_id'), 'price_requests', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_price_requests_id'), table_name='price_requests')
    op.drop_table('price_requests')
    op.drop_table('notes')
    op.drop_table('annonces')
    op.drop_index('uq_user_default_address', table_name='addresses', postgresql_where=sa.text('is_default = true'))
    op.drop_table('addresses')
    op.drop_table('users')
    op.drop_table('global_settings')
    # ### end Alembic commands ###
